{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workflows_Offboarding_name": {
            "defaultValue": "Offboarding",
            "type": "String"
        },
        "connections_microsoftforms_externalid": {
            "defaultValue": "/subscriptions/<SubscriptionID>/resourceGroups/<ResourceGroupName>/providers/Microsoft.Web/connections/microsoftforms",
            "type": "String"
        },
        "connections_office365_1_externalid": {
            "defaultValue": "/subscriptions/<SubscriptionID>/resourceGroups/<ResourceGroupName>/providers/Microsoft.Web/connections/office365-1",
            "type": "String"
        },
        "connections_azuread_externalid": {
            "defaultValue": "/subscriptions/<SubscriptionID>/resourceGroups/<ResourceGroupName>/providers/Microsoft.Web/connections/azuread",
            "type": "String"
        },
        "connections_office365_2_externalid": {
            "defaultValue": "/subscriptions/<SubscriptionID>/resourceGroups/<ResourceGroupName>/providers/Microsoft.Web/connections/office365-2",
            "type": "String"
        },
        "connections_azureautomation_externalid": {
            "defaultValue": "/subscriptions/<SubscriptionID>/resourceGroups/<ResourceGroupName>/providers/Microsoft.Web/connections/azureautomation",
            "type": "String"
        },
        "connections_office365_3_externalid": {
            "defaultValue": "/subscriptions/<SubscriptionID>/resourceGroups/<ResourceGroupName>/providers/Microsoft.Web/connections/office365-3",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_Offboarding_name')]",
            "location": "westeurope",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_new_response_is_submitted": {
                            "splitOn": "@triggerBody()?['value']",
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['microsoftforms']['connectionId']"
                                    }
                                },
                                "body": {
                                    "eventType": "responseAdded",
                                    "notificationUrl": "@listCallbackUrl()",
                                    "source": "ms-connector"
                                },
                                "path": "/formapi/api/forms/@{encodeURIComponent('<FormID>')}/webhooks"
                            }
                        }
                    },
                    "actions": {
                        "Get_response_details": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['microsoftforms']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/formapi/api/forms('@{encodeURIComponent('<FormID>')}')/responses",
                                "queries": {
                                    "response_id": "@triggerBody()?['resourceData']?['responseId']"
                                }
                            }
                        },
                        "Send_approval_email": {
                            "runAfter": {
                                "Initialize_variable_EntraDeviceStatus_": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['office365-1']['connectionId']"
                                    }
                                },
                                "body": {
                                    "NotificationUrl": "@listCallbackUrl()",
                                    "Message": {
                                        "To": "<approveremailadres>",
                                        "Body": "Graag de offboarding van @{body('Get_response_details')?['rcccabcf0925646f0aff66934bfd51136']} goedkeuren/afwijzen",
                                        "Importance": "Normal",
                                        "HideHTMLMessage": false,
                                        "ShowHTMLConfirmationDialog": false,
                                        "Subject": "Goedkeuringsaanvraag",
                                        "Options": "Goedkeuren, Weigeren"
                                    }
                                },
                                "path": "/approvalmail/$subscriptions"
                            }
                        },
                        "Condition_1": {
                            "actions": {
                                "Get_user": {
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuread']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "/v1.0/users/@{encodeURIComponent(body('Get_response_details')?['rcccabcf0925646f0aff66934bfd51136'])}"
                                    }
                                },
                                "Direct_disablen": {
                                    "actions": {},
                                    "runAfter": {
                                        "Get_user": [
                                            "Succeeded"
                                        ]
                                    },
                                    "else": {
                                        "actions": {
                                            "Delay_until": {
                                                "type": "Wait",
                                                "inputs": {
                                                    "until": {
                                                        "timestamp": "@addDays(convertToUtc(body('Get_response_details')?['r00d563794fd840b8ad3e44754356794a'], 'W. Europe Standard Time'), 2)\r\n\r\n"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@body('Get_response_details')?['rc2680699bcb645f5bd651e936688d84a']",
                                                    "Ja"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Send_an_email_from_a_shared_mailbox_(V2)_": {
                                    "runAfter": {
                                        "Get_user": [
                                            "TimedOut",
                                            "Skipped",
                                            "Failed"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['office365-2']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "body": {
                                            "MailboxAddress": "<offboardingEmailAdres>",
                                            "To": "@body('Get_response_details')?['responder']",
                                            "Subject": "offboarding gefaald: @{body('Get_response_details')?['rcccabcf0925646f0aff66934bfd51136']}",
                                            "Body": "<p class=\"editor-paragraph\">De offboarding is mislukt. Neem contact op met de IT admin.</p>",
                                            "Importance": "Normal"
                                        },
                                        "path": "/v2/SharedMailbox/Mail"
                                    }
                                },
                                "Refresh_tokens": {
                                    "runAfter": {
                                        "Direct_disablen": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuread']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/v1.0/users/@{encodeURIComponent(body('Get_user')?['id'])}/revokeSignInSessions"
                                    }
                                },
                                "Update_user": {
                                    "runAfter": {
                                        "Refresh_tokens": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuread']['connectionId']"
                                            }
                                        },
                                        "method": "patch",
                                        "body": {
                                            "accountEnabled": false
                                        },
                                        "path": "/v1.0/users/@{encodeURIComponent(body('Get_user')?['id'])}"
                                    }
                                },
                                "Exchange_offboarding": {
                                    "runAfter": {
                                        "Update_user": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureautomation']['connectionId']"
                                            }
                                        },
                                        "method": "put",
                                        "body": {
                                            "properties": {
                                                "parameters": {
                                                    "User": "@body('Get_response_details')?['r60a7927093a3459e890a74d8ac3b4a6f']",
                                                    "Identity": "@body('Get_response_details')?['rcccabcf0925646f0aff66934bfd51136']"
                                                }
                                            }
                                        },
                                        "path": "/subscriptions/@{encodeURIComponent('<SubscriptionID>')}/resourceGroups/@{encodeURIComponent('<ResourceGroupName>')}/providers/Microsoft.Automation/automationAccounts/@{encodeURIComponent('aid-aa-autocleanup')}/jobs",
                                        "queries": {
                                            "x-ms-api-version": "2015-10-31",
                                            "runbookName": "[concat('User', parameters('workflows_Offboarding_name'))]",
                                            "wait": false
                                        }
                                    }
                                },
                                "Remove_from_Distribution_List": {
                                    "runAfter": {
                                        "Exchange_offboarding": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureautomation']['connectionId']"
                                            }
                                        },
                                        "method": "put",
                                        "body": {
                                            "properties": {
                                                "parameters": {
                                                    "Member": "@body('Get_user')?['mail']"
                                                }
                                            }
                                        },
                                        "path": "/subscriptions/@{encodeURIComponent('<SubscriptionID>')}/resourceGroups/@{encodeURIComponent('<ResourceGroupName>')}/providers/Microsoft.Automation/automationAccounts/@{encodeURIComponent('aid-aa-autocleanup')}/jobs",
                                        "queries": {
                                            "x-ms-api-version": "2015-10-31",
                                            "runbookName": "RemoveUserFromDistributionList",
                                            "wait": false
                                        }
                                    }
                                },
                                "Delete_all_auth_methods_": {
                                    "runAfter": {
                                        "Direct_disablen": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureautomation']['connectionId']"
                                            }
                                        },
                                        "method": "put",
                                        "body": {
                                            "properties": {
                                                "parameters": {
                                                    "UserId": "@body('Get_user')?['id']"
                                                }
                                            }
                                        },
                                        "path": "/subscriptions/@{encodeURIComponent('<SubscriptionID>')}/resourceGroups/@{encodeURIComponent('<ResourceGroupName>')}/providers/Microsoft.Automation/automationAccounts/@{encodeURIComponent('aid-aa-autocleanup')}/jobs",
                                        "queries": {
                                            "x-ms-api-version": "2015-10-31",
                                            "runbookName": "DeletAuthMethods",
                                            "wait": true
                                        }
                                    }
                                },
                                "Disable_User_in_AD_and_remove_user_from_groups": {
                                    "runAfter": {
                                        "Delete_all_auth_methods_": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureautomation']['connectionId']"
                                            }
                                        },
                                        "method": "put",
                                        "body": {
                                            "properties": {
                                                "runOn": "HybridWorkers",
                                                "parameters": {
                                                    "FullAccountName": "@body('Get_response_details')?['rcccabcf0925646f0aff66934bfd51136']"
                                                }
                                            }
                                        },
                                        "path": "/subscriptions/@{encodeURIComponent('<SubscriptionID>')}/resourceGroups/@{encodeURIComponent('<ResourceGroupName>')}/providers/Microsoft.Automation/automationAccounts/@{encodeURIComponent('aid-aa-autocleanup')}/jobs",
                                        "queries": {
                                            "x-ms-api-version": "2015-10-31",
                                            "runbookName": "DisableADusers",
                                            "wait": true
                                        }
                                    }
                                },
                                "HTTP_GET_registeredDevices_(Entra_ID)": {
                                    "runAfter": {
                                        "Direct_disablen": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "uri": "https://graph.microsoft.com/v1.0/users/@{body('Get_user')?['id']}/registeredDevices?$select=id,displayName,deviceId,operatingSystem",
                                        "method": "GET",
                                        "authentication": {
                                            "type": "ManagedServiceIdentity",
                                            "audience": "https://graph.microsoft.com"
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                },
                                "Parse_JSON_GET_registeredDevices": {
                                    "runAfter": {
                                        "HTTP_GET_registeredDevices_(Entra_ID)": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@body('HTTP_GET_registeredDevices_(Entra_ID)')",
                                        "schema": {
                                            "type": "object",
                                            "properties": {
                                                "@@odata.context": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@@odata.type": {
                                                                "type": "string"
                                                            },
                                                            "id": {
                                                                "type": "string"
                                                            },
                                                            "displayName": {
                                                                "type": "string"
                                                            },
                                                            "deviceId": {
                                                                "type": "string"
                                                            },
                                                            "operatingSystem": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "@@odata.type",
                                                            "id",
                                                            "displayName",
                                                            "deviceId",
                                                            "operatingSystem"
                                                        ]
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "Filter_array_OperatingSystem_equals_Windows": {
                                    "runAfter": {
                                        "Parse_JSON_GET_registeredDevices": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Query",
                                    "inputs": {
                                        "from": "@body('Parse_JSON_GET_registeredDevices')?['value']",
                                        "where": "@equals(item()?['operatingSystem'],'Windows')"
                                    }
                                },
                                "For_each_Entra_Device": {
                                    "foreach": "@body('Filter_array_OperatingSystem_equals_Windows')",
                                    "actions": {
                                        "HTTP_Disable_Devices_in_Entra": {
                                            "type": "Http",
                                            "inputs": {
                                                "uri": "https://graph.microsoft.com/v1.0/devices/@{item()['id']}",
                                                "method": "PATCH",
                                                "body": {
                                                    "accountEnabled": false
                                                },
                                                "authentication": {
                                                    "type": "ManagedServiceIdentity",
                                                    "audience": "https://graph.microsoft.com"
                                                }
                                            },
                                            "runtimeConfiguration": {
                                                "contentTransfer": {
                                                    "transferMode": "Chunked"
                                                }
                                            }
                                        },
                                        "Condition_Entra_Device_Status_returncode": {
                                            "actions": {
                                                "Append_to_string_variable": {
                                                    "type": "AppendToStringVariable",
                                                    "inputs": {
                                                        "name": "EntraDeviceStatus",
                                                        "value": "Enabled"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "HTTP_Disable_Devices_in_Entra": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "else": {
                                                "actions": {
                                                    "Append_to_string_variable_1": {
                                                        "type": "AppendToStringVariable",
                                                        "inputs": {
                                                            "name": "EntraDeviceStatus",
                                                            "value": "Disabled"
                                                        }
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@outputs('HTTP_GET_registeredDevices_(Entra_ID)')?['statusCode']",
                                                            204
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    },
                                    "runAfter": {
                                        "Filter_array_OperatingSystem_equals_Windows": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                },
                                "Compose": {
                                    "runAfter": {
                                        "For_each_Entra_Device": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": "@variables('EntraDeviceStatus')"
                                },
                                "Send_an_email_from_a_shared_mailbox_(V2)_1-copy": {
                                    "runAfter": {
                                        "Compose": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['office365-3']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "body": {
                                            "MailboxAddress": "<offboardingEmailAdres>",
                                            "To": "<SenderEmailAdres>",
                                            "Subject": "Einde dienstverband: @{body('Get_response_details')?['rcccabcf0925646f0aff66934bfd51136']}",
                                            "Body": "<p class=\"editor-paragraph\">Datum beëindiging: @{body('Get_response_details')?['r00d563794fd840b8ad3e44754356794a']}</p><p class=\"editor-paragraph\">Toegang mailbox verleend aan: @{body('Get_response_details')?['r60a7927093a3459e890a74d8ac3b4a6f']}</p><p class=\"editor-paragraph\">Wordt de laptop overgenomen: @{body('Get_response_details')?['r8d444e1e9b7c4233b64664fc6976217d']}</p><p class=\"editor-paragraph\">Entra Device Status: @{outputs('Compose')}</p>",
                                            "Importance": "Normal"
                                        },
                                        "path": "/v2/SharedMailbox/Mail"
                                    }
                                }
                            },
                            "runAfter": {
                                "Send_approval_email": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Send_an_email_from_a_shared_mailbox_(V2)": {
                                        "type": "ApiConnection",
                                        "inputs": {
                                            "host": {
                                                "connection": {
                                                    "name": "@parameters('$connections')['office365-1']['connectionId']"
                                                }
                                            },
                                            "method": "post",
                                            "body": {
                                                "MailboxAddress": "<offboardingEmailAdres>",
                                                "To": "@body('Get_response_details')?['responder']",
                                                "Subject": "[concat(parameters('workflows_Offboarding_name'), ' afgewezen')]",
                                                "Body": "<p class=\"editor-paragraph\">Je aanvraag voor offboarding van @{body('Get_response_details')?['rcccabcf0925646f0aff66934bfd51136']} is afgewezen!</p>",
                                                "Importance": "Normal"
                                            },
                                            "path": "/v2/SharedMailbox/Mail"
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@body('Send_approval_email')?['SelectedOption']",
                                            "Goedkeuren"
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Initialize_variable_EntraDeviceStatus_": {
                            "runAfter": {
                                "Get_response_details": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "EntraDeviceStatus",
                                        "type": "string"
                                    }
                                ]
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "microsoftforms": {
                                "id": "/subscriptions/<SubscriptionID>/providers/Microsoft.Web/locations/westeurope/managedApis/microsoftforms",
                                "connectionId": "[parameters('connections_microsoftforms_externalid')]",
                                "connectionName": "microsoftforms"
                            },
                            "office365-1": {
                                "id": "/subscriptions/<SubscriptionID>/providers/Microsoft.Web/locations/westeurope/managedApis/office365",
                                "connectionId": "[parameters('connections_office365_1_externalid')]",
                                "connectionName": "office365-1"
                            },
                            "azuread": {
                                "id": "/subscriptions/<SubscriptionID>/providers/Microsoft.Web/locations/westeurope/managedApis/azuread",
                                "connectionId": "[parameters('connections_azuread_externalid')]",
                                "connectionName": "azuread"
                            },
                            "office365-2": {
                                "id": "/subscriptions/<SubscriptionID>/providers/Microsoft.Web/locations/westeurope/managedApis/office365",
                                "connectionId": "[parameters('connections_office365_2_externalid')]",
                                "connectionName": "office365-2"
                            },
                            "azureautomation": {
                                "id": "/subscriptions/<SubscriptionID>/providers/Microsoft.Web/locations/westeurope/managedApis/azureautomation",
                                "connectionId": "[parameters('connections_azureautomation_externalid')]",
                                "connectionName": "azureautomation"
                            },
                            "office365-3": {
                                "id": "/subscriptions/<SubscriptionID>/providers/Microsoft.Web/locations/westeurope/managedApis/office365",
                                "connectionId": "[parameters('connections_office365_3_externalid')]",
                                "connectionName": "office365-3"
                            }
                        }
                    }
                }
            }
        }
    ]
}
